{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/thesisManagementSystem.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction FetchThesisKeywordComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/thesisKeyword/edit/\", a1];\n};\nfunction FetchThesisKeywordComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"td\");\n    i0.ɵɵelementStart(6, \"td\")(7, \"button\", 5)(8, \"span\");\n    i0.ɵɵelement(9, \"i\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \" \\u00A0 \");\n    i0.ɵɵelementStart(12, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function FetchThesisKeywordComponent_tr_17_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const thesisKeyword_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.delete(thesisKeyword_r2.keywordId));\n    });\n    i0.ɵɵelementStart(13, \"span\");\n    i0.ɵɵelement(14, \"i\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \" Delete \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const thesisKeyword_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(thesisKeyword_r2.keywordId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(thesisKeyword_r2.keyword);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, thesisKeyword_r2.keywordId));\n  }\n}\nconst _c1 = function () {\n  return [\"/add-thesisKeyword\"];\n};\nexport class FetchThesisKeywordComponent {\n  constructor(thesisManagementSystemService, avRoute, router) {\n    this.thesisManagementSystemService = thesisManagementSystemService;\n    this.avRoute = avRoute;\n    this.router = router;\n    this.thesisId = 0;\n    this.thesisKeywords = [];\n  }\n  ngOnInit() {\n    this.avRoute.paramMap.subscribe(params => {\n      this.thesisId = params.get('id');\n    });\n    this.getThesisKeywords();\n  }\n  getThesisKeywords() {\n    this.thesisManagementSystemService.getThesisKeywordListForThesis(this.thesisId).subscribe(thesisKeywordData => this.thesisKeywords = thesisKeywordData);\n  }\n  delete(id) {\n    const ans = confirm('Do you want to delete the thesisKeyword with Id: ' + id);\n    if (ans) {\n      this.thesisManagementSystemService.deleteThesisKeyword(id).subscribe(() => {\n        this.getThesisKeywords();\n      }, error => console.error(error));\n    }\n  }\n}\nFetchThesisKeywordComponent.ɵfac = function FetchThesisKeywordComponent_Factory(t) {\n  return new (t || FetchThesisKeywordComponent)(i0.ɵɵdirectiveInject(i1.ThesisManagementSystemService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\nFetchThesisKeywordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchThesisKeywordComponent,\n  selectors: [[\"app-fetch-thesisKeyword\"]],\n  decls: 18,\n  vars: 4,\n  consts: [[4, \"ngIf\"], [1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-user-plus\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-outline-dark\", 3, \"routerLink\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-pencil\"], [1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-trash\"]],\n  template: function FetchThesisKeywordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Thesis Keyword List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, FetchThesisKeywordComponent_p_2_Template, 3, 0, \"p\", 0);\n      i0.ɵɵelementStart(3, \"div\")(4, \"button\", 1)(5, \"span\");\n      i0.ɵɵelement(6, \"i\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \" Add New Thesis Keyword \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelementStart(9, \"table\", 3)(10, \"thead\")(11, \"tr\")(12, \"th\");\n      i0.ɵɵtext(13, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Keyword\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, FetchThesisKeywordComponent_tr_17_Template, 16, 5, \"tr\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.thesisKeywords);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c1));\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.thesisKeywords);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAEAA,yBAA2B;IAAIA,0BAAU;IAAAA,iBAAK;;;;;;;;;IAkBtCA,0BAAiD;IACzCA,YAA6B;IAAAA,iBAAK;IACtCA,0BAAI;IAAAA,YAA2B;IAAAA,iBAAK;IACpCA,qBAAS;IACTA,0BAAI;IAGUA,uBAA+C;IAAAA,iBAAO;IAC5DA,uBACJ;IAAAA,iBAAS;IACTA,yBACA;IAAAA,kCACkD;IAA1CA;MAAA;MAAA;MAAA;MAAA,OAASA,wDAA+B;IAAA,EAAC;IAC7CA,6BAAM;IAAAA,wBAA8C;IAAAA,iBAAO;IAC3DA,yBACJ;IAAAA,iBAAS;;;;IAdTA,eAA6B;IAA7BA,gDAA6B;IAC7BA,eAA2B;IAA3BA,8CAA2B;IAInBA,eAAgE;IAAhEA,mFAAgE;;;;;;AChBxF,OAAM,MAAOC,2BAA2B;EAItCC,YACUC,6BAA4D,EAC5DC,OAAuB,EACvBC,MAAc;IAFd,kCAA6B,GAA7BF,6BAA6B;IAC7B,YAAO,GAAPC,OAAO;IACP,WAAM,GAANC,MAAM;IANhB,aAAQ,GAAW,CAAC;IACb,mBAAc,GAAoB,EAAE;EAKd;EAE7BC,QAAQ;IACN,IAAI,CAACF,OAAO,CAACG,QAAQ,CAACC,SAAS,CAAEC,MAAc,IAAI;MACjD,IAAI,CAACC,QAAQ,GAAGD,MAAM,CAACE,GAAG,CAAC,IAAI,CAAC;IAClC,CAAC,CAAC;IACF,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EAEAA,iBAAiB;IACf,IAAI,CAACT,6BAA6B,CAC/BU,6BAA6B,CAAC,IAAI,CAACH,QAAQ,CAAC,CAC5CF,SAAS,CAAEM,iBAAiB,IAAM,IAAI,CAACC,cAAc,GAAGD,iBAAkB,CAAC;EAChF;EAEAE,MAAM,CAACC,EAAU;IACf,MAAMC,GAAG,GAAGC,OAAO,CACjB,mDAAmD,GAAGF,EAAE,CACzD;IACD,IAAIC,GAAG,EAAE;MACP,IAAI,CAACf,6BAA6B,CAACiB,mBAAmB,CAACH,EAAE,CAAC,CAACT,SAAS,CAClE,MAAK;QACH,IAAI,CAACI,iBAAiB,EAAE;MAC1B,CAAC,EACAS,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAChC;;EAEL;;AAlCWpB,2BAA2B;mBAA3BA,2BAA2B;AAAA;AAA3BA,2BAA2B;QAA3BA,2BAA2B;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVxC3B,0BAAI;MAAAA,mCAAmB;MAAAA,iBAAK;MAE5BA,wEAAkD;MAElDA,2BAAK;MAEKA,uBAAkD;MAAAA,iBAAO;MAACA,wCAElE;MAAAA,iBAAS;MAGXA,qBAAM;MACNA,gCAAqB;MAGLA,mBAAE;MAAAA,iBAAK;MACXA,2BAAI;MAAAA,wBAAO;MAAAA,iBAAK;MAGxBA,8BAAO;MACHA,6EAiBK;MACTA,iBAAQ;;;MApCRA,eAAqB;MAArBA,0CAAqB;MAGSA,eAAqC;MAArCA,uDAAqC;MAejCA,gBAAiB;MAAjBA,4CAAiB","names":["i0","FetchThesisKeywordComponent","constructor","thesisManagementSystemService","avRoute","router","ngOnInit","paramMap","subscribe","params","thesisId","get","getThesisKeywords","getThesisKeywordListForThesis","thesisKeywordData","thesisKeywords","delete","id","ans","confirm","deleteThesisKeyword","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/nisadiker/Projects/ThesisManagementSystem/ThesisManagementSystem/ClientApp/src/app/fetch-thesisKeyword/fetch-thesisKeyword.component.html","/Users/nisadiker/Projects/ThesisManagementSystem/ThesisManagementSystem/ClientApp/src/app/fetch-thesisKeyword/fetch-thesisKeyword.component.ts"],"sourcesContent":["<h1>Thesis Keyword List</h1>\n\n<p *ngIf=\"!thesisKeywords\"><em>Loading...</em></p>\n\n<div>\n  <button class=\"btn btn-primary\" [routerLink]=\"['/add-thesisKeyword']\">\n    <span><i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i></span> Add New\n    Thesis Keyword\n  </button>\n</div>\n\n<br />\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th>Id</th>\n            <th>Keyword</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let thesisKeyword of thesisKeywords\">\n            <td>{{ thesisKeyword.keywordId }}</td>\n            <td>{{ thesisKeyword.keyword }}</td>\n            <td></td>\n            <td>\n                <button class=\"btn btn-outline-dark\"\n                        [routerLink]=\"['/thesisKeyword/edit/', thesisKeyword.keywordId]\">\n                    <span><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></span>\n                    Edit\n                </button>\n                &nbsp;\n                <button class=\"btn btn-outline-danger\"\n                        (click)=\"delete(thesisKeyword.keywordId)\">\n                    <span><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span>\n                    Delete\n                </button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { ThesisKeyword } from '../models/thesisKeyword';\nimport { ThesisManagementSystemService } from '../services/thesisManagementSystem.service';\n\n@Component({\n  selector: 'app-fetch-thesisKeyword',\n  templateUrl: './fetch-thesisKeyword.component.html',\n  styleUrls: ['./fetch-thesisKeyword.component.scss'],\n})\nexport class FetchThesisKeywordComponent implements OnInit {\n  thesisId: number = 0;\n  public thesisKeywords: ThesisKeyword[] = [];\n\n  constructor(\n    private thesisManagementSystemService: ThesisManagementSystemService,\n    private avRoute: ActivatedRoute,\n    private router: Router,) { }\n\n  ngOnInit(): void {\n    this.avRoute.paramMap.subscribe((params: Params) => {\n      this.thesisId = params.get('id');\n    });\n    this.getThesisKeywords();\n  }\n  \n  getThesisKeywords(): void {\n    this.thesisManagementSystemService\n      .getThesisKeywordListForThesis(this.thesisId)\n      .subscribe((thesisKeywordData) => (this.thesisKeywords = thesisKeywordData));\n  }\n\n  delete(id: number): void {\n    const ans = confirm(\n      'Do you want to delete the thesisKeyword with Id: ' + id\n    );\n    if (ans) {\n      this.thesisManagementSystemService.deleteThesisKeyword(id).subscribe(\n        () => {\n          this.getThesisKeywords();\n        },\n        (error) => console.error(error)\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}