{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nlet hostUrl = 'ThesisManagementSystem/';\nexport class ThesisManagementSystemService {\n  constructor(http) {\n    this.http = http;\n  }\n  getUniversityList() {\n    return this.http.get(hostUrl + 'GetUniversityList');\n  }\n  getUniversityData(id) {\n    return this.http.get(hostUrl + 'GetUniversity/' + id);\n  }\n  saveUniversity(university) {\n    return this.http.post(hostUrl + 'AddUniversity', university);\n  }\n  updateUniversity(university) {\n    return this.http.put(hostUrl + 'UpdateUniversity', university);\n  }\n  deleteUniversity(id) {\n    return this.http.delete(hostUrl + 'DeleteUniversity/' + id);\n  }\n  getInstituteList(universityId) {\n    return this.http.get(hostUrl + 'GetInstituteList/' + universityId);\n  }\n  getInstituteData(id) {\n    return this.http.get(hostUrl + 'GetInstitute/' + id);\n  }\n  saveInstitute(comment) {\n    return this.http.post(hostUrl + 'AddInstitute', comment);\n  }\n  updateInstitute(comment) {\n    return this.http.put(hostUrl + 'UpdateInstitute', comment);\n  }\n  deleteInstitute(id) {\n    return this.http.delete(hostUrl + 'DeleteInstitute/' + id);\n  }\n}\nThesisManagementSystemService.ɵfac = function ThesisManagementSystemService_Factory(t) {\n  return new (t || ThesisManagementSystemService)(i0.ɵɵinject(i1.HttpClient));\n};\nThesisManagementSystemService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ThesisManagementSystemService,\n  factory: ThesisManagementSystemService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,IAAIA,OAAO,GAAG,yBAAyB;AAMvC,OAAM,MAAOC,6BAA6B;EAExCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,iBAAiB;IACf,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAeL,OAAO,GAAG,mBAAmB,CAAC;EACnE;EAEAM,iBAAiB,CAACC,EAAU;IAC1B,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAaL,OAAO,GAAG,gBAAgB,GAAGO,EAAE,CAAC;EACnE;EAEAC,cAAc,CAACC,UAAsB;IACnC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAACV,OAAO,GAAG,eAAe,EAAES,UAAU,CAAC;EAC9D;EAEAE,gBAAgB,CAACF,UAAsB;IACrC,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAACZ,OAAO,GAAG,kBAAkB,EAAES,UAAU,CAAC;EAChE;EAEAI,gBAAgB,CAACN,EAAU;IACzB,OAAO,IAAI,CAACJ,IAAI,CAACW,MAAM,CAACd,OAAO,GAAG,mBAAmB,GAAGO,EAAE,CAAC;EAC7D;EAEAQ,gBAAgB,CAACC,YAAoB;IACnC,OAAO,IAAI,CAACb,IAAI,CAACE,GAAG,CAAcL,OAAO,GAAG,mBAAmB,GAAGgB,YAAY,CAAC;EACjF;EAEAC,gBAAgB,CAACV,EAAU;IACzB,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAYL,OAAO,GAAG,eAAe,GAAGO,EAAE,CAAC;EACjE;EAEAW,aAAa,CAACC,OAAkB;IAC9B,OAAO,IAAI,CAAChB,IAAI,CAACO,IAAI,CAACV,OAAO,GAAG,cAAc,EAAEmB,OAAO,CAAC;EAC1D;EAEAC,eAAe,CAACD,OAAkB;IAChC,OAAO,IAAI,CAAChB,IAAI,CAACS,GAAG,CAACZ,OAAO,GAAG,iBAAiB,EAAEmB,OAAO,CAAC;EAC5D;EAEAE,eAAe,CAACd,EAAU;IACxB,OAAO,IAAI,CAACJ,IAAI,CAACW,MAAM,CAACd,OAAO,GAAG,kBAAkB,GAAGO,EAAE,CAAC;EAC5D;;AA1CWN,6BAA6B;mBAA7BA,6BAA6B;AAAA;AAA7BA,6BAA6B;SAA7BA,6BAA6B;EAAAqB,SAA7BrB,6BAA6B;EAAAsB,YAF5B;AAAM","names":["hostUrl","ThesisManagementSystemService","constructor","http","getUniversityList","get","getUniversityData","id","saveUniversity","university","post","updateUniversity","put","deleteUniversity","delete","getInstituteList","universityId","getInstituteData","saveInstitute","comment","updateInstitute","deleteInstitute","factory","providedIn"],"sourceRoot":"","sources":["/Users/nisadiker/Projects/ThesisManagementSystem/ThesisManagementSystem/ClientApp/src/app/services/thesisManagementSystem.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { University } from '../models/university';\nimport { Institute } from '../models/institute';\nimport { Institute } from '../models/comment';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\n\n\nlet hostUrl = 'ThesisManagementSystem/';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThesisManagementSystemService {\n\n  constructor(private http: HttpClient) { }\n\n  getUniversityList(): Observable<University[]> {\n    return this.http.get<University[]>(hostUrl + 'GetUniversityList');\n  }\n\n  getUniversityData(id: number): Observable<University> {\n    return this.http.get<University>(hostUrl + 'GetUniversity/' + id);\n  }\n\n  saveUniversity(university: University): Observable<any> {\n    return this.http.post(hostUrl + 'AddUniversity', university);\n  }\n\n  updateUniversity(university: University): Observable<any> {\n    return this.http.put(hostUrl + 'UpdateUniversity', university);\n  }\n\n  deleteUniversity(id: number): Observable<any> {\n    return this.http.delete(hostUrl + 'DeleteUniversity/' + id);\n  }\n\n  getInstituteList(universityId: number): Observable<Institute[]> {\n    return this.http.get<Institute[]>(hostUrl + 'GetInstituteList/' + universityId);\n  }\n\n  getInstituteData(id: number): Observable<Institute> {\n    return this.http.get<Institute>(hostUrl + 'GetInstitute/' + id);\n  }\n\n  saveInstitute(comment: Institute): Observable<any> {\n    return this.http.post(hostUrl + 'AddInstitute', comment);\n  }\n\n  updateInstitute(comment: Institute): Observable<any> {\n    return this.http.put(hostUrl + 'UpdateInstitute', comment);\n  }\n\n  deleteInstitute(id: number): Observable<any> {\n    return this.http.delete(hostUrl + 'DeleteInstitute/' + id);\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}