{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/thesisManagementSystem.service\";\nimport * as i4 from \"@angular/common\";\nfunction AddThesisComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \" Title is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddThesisComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \" Abstract is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddThesisComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \" Thesis Year is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddThesisComponent_span_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \" Thesis Type is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddThesisComponent_option_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const university_r9 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", university_r9.universityId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(university_r9.universityName);\n  }\n}\nfunction AddThesisComponent_span_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \" University is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddThesisComponent_option_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const institute_r10 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", institute_r10.instituteId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(institute_r10.instituteName);\n  }\n}\nfunction AddThesisComponent_span_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \" Institute is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddThesisComponent_span_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \" Submission Date is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddThesisComponent {\n  constructor(fb, avRoute, thesisManagementSystemService, router, datepipe) {\n    this.fb = fb;\n    this.avRoute = avRoute;\n    this.thesisManagementSystemService = thesisManagementSystemService;\n    this.router = router;\n    this.datepipe = datepipe;\n    this.universities = [];\n    this.institutes = [];\n    this.title = 'Create';\n    this.thesisId = 0;\n    this.submitted = false;\n    this.thesisForm = this.fb.group({\n      thesisId: 0,\n      title: ['', [Validators.required]],\n      universityId: ['', [Validators.required]],\n      instituteId: ['', [Validators.required]],\n      abstract: ['', [Validators.required]],\n      submissionDate: ['', [Validators.required]],\n      thesisYear: ['', [Validators.required]],\n      thesisType: ['', [Validators.required]]\n    });\n  }\n  ngOnInit() {\n    this.getUniversities();\n    this.avRoute.paramMap.subscribe(params => {\n      this.thesisId = params.get('id');\n    });\n    if (this.thesisId > 0) {\n      this.title = 'Edit';\n      this.thesisManagementSystemService.getThesisData(this.thesisId).subscribe(response => {\n        this.getInstitutes(response.universityId);\n        this.thesisForm.setValue({\n          thesisId: response.thesisId,\n          title: response.title,\n          universityId: response.universityId,\n          instituteId: response.instituteId,\n          abstract: response.abstract,\n          submissionDate: this.datepipe.transform(response.submissionDate, 'yyyy-MM-dd'),\n          thesisYear: response.thesisYear,\n          thesisType: response.thesisType\n        });\n      }, error => console.error(error));\n    }\n  }\n  onUniversitySelectChange(event) {\n    // You can access the selected value using event.target.value\n    const selectedValue = event.target.value;\n    // Call your method or perform actions based on the selected value\n    this.getInstitutes(selectedValue);\n  }\n  getUniversities() {\n    this.thesisManagementSystemService.getUniversityList().subscribe(universityData => this.universities = universityData);\n  }\n  getInstitutes(universityId) {\n    this.thesisManagementSystemService.getInstituteListForUniversity(universityId).subscribe(instituteData => this.institutes = instituteData);\n  }\n  get registerFormControl() {\n    return this.thesisForm.controls;\n  }\n  save() {\n    this.submitted = true;\n    if (!this.thesisForm.valid) {\n      return;\n    }\n    if (this.thesisId > 0) {\n      this.updateThesis();\n    } else {\n      this.addThesis();\n    }\n  }\n  cancel() {\n    this.navigateToFetchThesis();\n  }\n  addThesis() {\n    this.thesisManagementSystemService.saveThesis(this.thesisForm.value).subscribe(() => {\n      this.navigateToFetchThesis();\n    }, error => console.error(error));\n  }\n  updateThesis() {\n    this.thesisManagementSystemService.updateThesis(this.thesisForm.value).subscribe(() => {\n      this.navigateToFetchThesis();\n    }, error => console.error(error));\n  }\n  navigateToFetchThesis() {\n    this.router.navigate(['/fetch-thesis']);\n  }\n}\nAddThesisComponent.ɵfac = function AddThesisComponent_Factory(t) {\n  return new (t || AddThesisComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ThesisManagementSystemService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i4.DatePipe));\n};\nAddThesisComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddThesisComponent,\n  selectors: [[\"app-add-thesis\"]],\n  decls: 67,\n  vars: 11,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"row\"], [1, \"control-label\", \"col-md-12\"], [1, \"col-md-4\"], [\"ng-model\", \"myTextarea\", \"formControlName\", \"title\", 2, \"width\", \"415px\", \"height\", \"60px\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"ng-model\", \"myTextarea\", \"formControlName\", \"abstract\", 2, \"width\", \"415px\", \"height\", \"160px\"], [\"type\", \"number\", \"ng-pattern\", \"/^\\\\d{4}$/\", \"formControlName\", \"thesisYear\", 2, \"width\", \"415px\"], [\"for\", \"thesisType\", 1, \"control-label\", \"col-md-12\"], [\"data-val\", \"true\", \"formControlName\", \"thesisType\", 1, \"form-control\"], [\"value\", \"\"], [\"value\", \"Good Comment\"], [\"value\", \"Bad Comment\"], [\"for\", \"universityId\", 1, \"control-label\", \"col-md-12\"], [\"data-val\", \"true\", \"formControlName\", \"universityId\", 1, \"form-control\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"instituteId\", 1, \"control-label\", \"col-md-12\"], [\"data-val\", \"true\", \"formControlName\", \"instituteId\", 1, \"form-control\"], [\"type\", \"date\", \"formControlName\", \"submissionDate\", 1, \"form-control\"], [1, \"form-group\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"text-danger\"], [3, \"value\"]],\n  template: function AddThesisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Thesis\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"hr\");\n      i0.ɵɵelementStart(5, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AddThesisComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.save();\n      });\n      i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 2);\n      i0.ɵɵtext(8, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3);\n      i0.ɵɵelement(10, \"textarea\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, AddThesisComponent_span_11_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 1)(13, \"label\", 2);\n      i0.ɵɵtext(14, \"Abstract\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 3);\n      i0.ɵɵelement(16, \"textarea\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, AddThesisComponent_span_17_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 1)(19, \"label\", 2);\n      i0.ɵɵtext(20, \"Thesis Year\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 3);\n      i0.ɵɵelement(22, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(23, AddThesisComponent_span_23_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 1)(25, \"label\", 8);\n      i0.ɵɵtext(26, \"Thesis Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 3)(28, \"select\", 9)(29, \"option\", 10);\n      i0.ɵɵtext(30, \"-- Select Thesis Type --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"option\", 11);\n      i0.ɵɵtext(32, \"Good Comment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"option\", 12);\n      i0.ɵɵtext(34, \"Bad Comment\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(35, AddThesisComponent_span_35_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 1)(37, \"label\", 13);\n      i0.ɵɵtext(38, \"University\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"div\", 3)(40, \"select\", 14);\n      i0.ɵɵlistener(\"change\", function AddThesisComponent_Template_select_change_40_listener($event) {\n        return ctx.onUniversitySelectChange($event);\n      });\n      i0.ɵɵelementStart(41, \"option\", 10);\n      i0.ɵɵtext(42, \"-- Select University --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(43, AddThesisComponent_option_43_Template, 2, 2, \"option\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(44, AddThesisComponent_span_44_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"div\", 1)(46, \"label\", 16);\n      i0.ɵɵtext(47, \"Institute\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"div\", 3)(49, \"select\", 17)(50, \"option\", 10);\n      i0.ɵɵtext(51, \"-- Select Institute --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(52, AddThesisComponent_option_52_Template, 2, 2, \"option\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(53, AddThesisComponent_span_53_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"div\", 1)(55, \"label\", 2);\n      i0.ɵɵtext(56, \"Submission Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(57, \"div\", 3);\n      i0.ɵɵelement(58, \"input\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(59, AddThesisComponent_span_59_Template, 2, 0, \"span\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(60, \"br\");\n      i0.ɵɵelementStart(61, \"div\", 19)(62, \"button\", 20);\n      i0.ɵɵtext(63, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(64, \" \\u00A0 \");\n      i0.ɵɵelementStart(65, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function AddThesisComponent_Template_button_click_65_listener() {\n        return ctx.cancel();\n      });\n      i0.ɵɵtext(66, \"Cancel\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.title);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.thesisForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerFormControl.title.touched || ctx.submitted) && (ctx.registerFormControl.title.errors == null ? null : ctx.registerFormControl.title.errors.required));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerFormControl.abstract.touched || ctx.submitted) && (ctx.registerFormControl.abstract.errors == null ? null : ctx.registerFormControl.abstract.errors.required));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerFormControl.thesisYear.touched || ctx.submitted) && (ctx.registerFormControl.thesisYear.errors == null ? null : ctx.registerFormControl.thesisYear.errors.required));\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerFormControl.thesisType.touched || ctx.submitted) && (ctx.registerFormControl.thesisType.errors == null ? null : ctx.registerFormControl.thesisType.errors.required));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.universities);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerFormControl.universityId.touched || ctx.submitted) && (ctx.registerFormControl.universityId.errors == null ? null : ctx.registerFormControl.universityId.errors.required));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.institutes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerFormControl.instituteId.touched || ctx.submitted) && (ctx.registerFormControl.instituteId.errors == null ? null : ctx.registerFormControl.instituteId.errors.required));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (ctx.registerFormControl.submissionDate.touched || ctx.submitted) && (ctx.registerFormControl.submissionDate.errors == null ? null : ctx.registerFormControl.submissionDate.errors.required));\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","AddThesisComponent","constructor","fb","avRoute","thesisManagementSystemService","router","datepipe","thesisForm","group","thesisId","title","required","universityId","instituteId","abstract","submissionDate","thesisYear","thesisType","ngOnInit","getUniversities","paramMap","subscribe","params","get","getThesisData","response","getInstitutes","setValue","transform","error","console","onUniversitySelectChange","event","selectedValue","target","value","getUniversityList","universityData","universities","getInstituteListForUniversity","instituteData","institutes","registerFormControl","controls","save","submitted","valid","updateThesis","addThesis","cancel","navigateToFetchThesis","saveThesis","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/nisadiker/Projects/ThesisManagementSystem/ThesisManagementSystem/ClientApp/src/app/add-thesis/add-thesis.component.ts","/Users/nisadiker/Projects/ThesisManagementSystem/ThesisManagementSystem/ClientApp/src/app/add-thesis/add-thesis.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { DatePipe } from '@angular/common'\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Institute } from '../models/institute';\nimport { Thesis } from '../models/thesis';\nimport { University } from '../models/university';\nimport { ThesisManagementSystemService } from '../services/thesisManagementSystem.service';\n\n\n@Component({\n  selector: 'app-add-thesis',\n  templateUrl: './add-thesis.component.html',\n  styleUrls: ['./add-thesis.component.scss'],\n})\nexport class AddThesisComponent implements OnInit {\n  public universities: University[] = [];\n  public institutes: Institute[] = [];\n  thesisForm: FormGroup;\n  title = 'Create';\n  thesisId: number = 0;\n  errorMessage: any;\n  submitted = false;\n\n\n\n  constructor(\n    private fb: FormBuilder,\n    private avRoute: ActivatedRoute,\n    private thesisManagementSystemService: ThesisManagementSystemService,\n    private router: Router,\n    private datepipe: DatePipe\n  ) {\n\n    this.thesisForm = this.fb.group({\n      thesisId: 0,\n      title: ['', [Validators.required]],\n      universityId: ['', [Validators.required]], \n      instituteId: ['', [Validators.required]], \n      abstract: ['', [Validators.required]],\n      submissionDate: ['', [Validators.required]],\n      thesisYear: ['', [Validators.required]],\n      thesisType: ['', [Validators.required]],\n    });\n  }\n\n\n\n  ngOnInit(): void {\n    this.getUniversities();\n\n    this.avRoute.paramMap.subscribe((params: Params) => {\n      this.thesisId = params.get('id');\n    });\n\n    if (this.thesisId > 0) {\n      this.title = 'Edit';\n\n      this.thesisManagementSystemService.getThesisData(this.thesisId).subscribe(\n        (response: Thesis) => {\n          this.getInstitutes(response.universityId);\n          this.thesisForm.setValue(\n            {\n              thesisId: response.thesisId,\n              title: response.title,\n              universityId: response.universityId,\n              instituteId: response.instituteId,\n              abstract: response.abstract,\n              submissionDate: this.datepipe.transform(response.submissionDate, 'yyyy-MM-dd'),\n              thesisYear: response.thesisYear,\n              thesisType: response.thesisType\n            });\n        },\n        (error) => console.error(error)\n      );\n      \n    }\n  }\n\n  onUniversitySelectChange(event: any) {\n    // You can access the selected value using event.target.value\n    const selectedValue = event.target.value;\n\n    // Call your method or perform actions based on the selected value\n    this.getInstitutes(selectedValue);\n  }\n\n  getUniversities(): void {\n    this.thesisManagementSystemService\n      .getUniversityList()\n      .subscribe((universityData) => (this.universities = universityData));\n  }\n\n  getInstitutes(universityId: number): void {\n    this.thesisManagementSystemService\n      .getInstituteListForUniversity(universityId)\n      .subscribe((instituteData) => (this.institutes = instituteData));\n  }\n\n  get registerFormControl() {\n    return this.thesisForm.controls;\n  }\n\n  save(): void {\n    this.submitted = true;\n    if (!this.thesisForm.valid) {\n      return;\n    }\n\n    if (this.thesisId > 0) {\n      this.updateThesis();\n    } else {\n      this.addThesis();\n    }\n  }\n\n  cancel(): void {\n    this.navigateToFetchThesis();\n  }\n\n  private addThesis(): void {\n    \n    this.thesisManagementSystemService.saveThesis(this.thesisForm.value).subscribe(\n      () => {\n        this.navigateToFetchThesis();\n      },\n      (error) => console.error(error)\n    );\n    \n  }\n\n  private updateThesis(): void {\n    this.thesisManagementSystemService.updateThesis(this.thesisForm.value).subscribe(\n      () => {\n        this.navigateToFetchThesis();\n      },\n      (error) => console.error(error)\n    );\n  }\n\n  private navigateToFetchThesis() {\n    this.router.navigate(['/fetch-thesis']);\n  }\n}\n","<h1>{{ title }}</h1>\n<h3>Thesis</h3>\n<hr />\n\n<form [formGroup]=\"thesisForm\" (ngSubmit)=\"save()\">\n\n\n    <div class=\"form-group row\">\n        <label class=\"control-label col-md-12\">Title</label>\n        <div class=\"col-md-4\">\n            <textarea ng-model=\"myTextarea\" formControlName=\"title\" style=\"width:415px;height:60px\"></textarea>\n        </div>\n        <span class=\"text-danger\" *ngIf=\"\n        (registerFormControl.title.touched || submitted) &&\n        registerFormControl.title.errors?.required\n      \">\n            Title is required.\n        </span>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"control-label col-md-12\">Abstract</label>\n        <div class=\"col-md-4\">\n            <textarea ng-model=\"myTextarea\" formControlName=\"abstract\" style=\"width:415px;height:160px\"></textarea>\n        </div>\n        <span class=\"text-danger\" *ngIf=\"\n        (registerFormControl.abstract.touched || submitted) &&\n        registerFormControl.abstract.errors?.required\n      \">\n            Abstract is required.\n        </span>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"control-label col-md-12\">Thesis Year</label>\n        <div class=\"col-md-4\">\n            <input type=\"number\" ng-pattern=\"/^\\d{4}$/\" formControlName=\"thesisYear\" style=\"width:415px\" />\n        </div>\n        <span class=\"text-danger\" *ngIf=\"\n        (registerFormControl.thesisYear.touched || submitted) &&\n        registerFormControl.thesisYear.errors?.required\n      \">\n            Thesis Year is required.\n        </span>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"control-label col-md-12\" for=\"thesisType\">Thesis Type</label>\n        <div class=\"col-md-4\">\n            <select class=\"form-control\" data-val=\"true\" formControlName=\"thesisType\">\n                <option value=\"\">-- Select Thesis Type --</option>\n                <option value=\"Good Comment\">Good Comment</option>\n                <option value=\"Bad Comment\">Bad Comment</option>\n            </select>\n        </div>\n        <span class=\"text-danger\" *ngIf=\"\n        (registerFormControl.thesisType.touched || submitted) &&\n        registerFormControl.thesisType.errors?.required\n      \">\n            Thesis Type is required\n        </span>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"control-label col-md-12\" for=\"universityId\">University</label>\n        <div class=\"col-md-4\">\n            <select class=\"form-control\" data-val=\"true\" formControlName=\"universityId\" (change)=\"onUniversitySelectChange($event)\">\n                <option value=\"\">-- Select University --</option>\n                <option *ngFor=\"let university of universities\" value=\"{{ university.universityId }}\">{{ university.universityName }}</option>\n            </select>\n        </div>\n        <span class=\"text-danger\" *ngIf=\"\n        (registerFormControl.universityId.touched || submitted) &&\n        registerFormControl.universityId.errors?.required\n      \">\n            University is required\n        </span>\n    </div>\n\n    <div class=\"form-group row\">\n        <label class=\"control-label col-md-12\" for=\"instituteId\">Institute</label>\n        <div class=\"col-md-4\">\n            <select class=\"form-control\" data-val=\"true\" formControlName=\"instituteId\">\n                <option value=\"\">-- Select Institute --</option>\n                <option *ngFor=\"let institute of institutes\" value=\"{{ institute.instituteId }}\">{{ institute.instituteName }}</option>\n            </select>\n        </div>\n        <span class=\"text-danger\" *ngIf=\"\n        (registerFormControl.instituteId.touched || submitted) &&\n        registerFormControl.instituteId.errors?.required\n      \">\n            Institute is required\n        </span>\n    </div>\n    <div class=\"form-group row\">\n        <label class=\"control-label col-md-12\">Submission Date</label>\n        <div class=\"col-md-4\">\n            <input class=\"form-control\" type=\"date\" formControlName=\"submissionDate\" />\n        </div>\n        <span class=\"text-danger\" *ngIf=\"\n        (registerFormControl.submissionDate.touched || submitted) &&\n        registerFormControl.submissionDate.errors?.required\n      \">\n            Submission Date is required.\n        </span>\n    </div>\n\n    <br />\n    <div class=\"form-group\">\n        <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n        &nbsp;\n        <button class=\"btn btn-danger\" (click)=\"cancel()\">Cancel</button>\n    </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}