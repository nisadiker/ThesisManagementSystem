{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/thesisManagementSystem.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction FetchPersonComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/person/edit/\", a1];\n};\nfunction FetchPersonComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"td\");\n    i0.ɵɵelementStart(6, \"td\")(7, \"button\", 5)(8, \"span\");\n    i0.ɵɵelement(9, \"i\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \" Edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(11, \" \\u00A0 \");\n    i0.ɵɵelementStart(12, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function FetchPersonComponent_tr_17_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const person_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.delete(person_r2.personId));\n    });\n    i0.ɵɵelementStart(13, \"span\");\n    i0.ɵɵelement(14, \"i\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15, \" Delete \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const person_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.personId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.personName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, person_r2.personId));\n  }\n}\nconst _c1 = function () {\n  return [\"/add-person\"];\n};\nexport class FetchPersonComponent {\n  constructor(thesisManagementSystemService) {\n    this.thesisManagementSystemService = thesisManagementSystemService;\n    this.persons = [];\n  }\n  ngOnInit() {\n    this.getPersons();\n  }\n  getPersons() {\n    this.thesisManagementSystemService.getPersonList().subscribe(personData => this.persons = personData);\n  }\n  delete(id) {\n    const ans = confirm('Do you want to delete the person with Id: ' + id);\n    if (ans) {\n      this.thesisManagementSystemService.deletePerson(id).subscribe(() => {\n        this.getPersons();\n      }, error => console.error(error));\n    }\n  }\n}\nFetchPersonComponent.ɵfac = function FetchPersonComponent_Factory(t) {\n  return new (t || FetchPersonComponent)(i0.ɵɵdirectiveInject(i1.ThesisManagementSystemService));\n};\nFetchPersonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchPersonComponent,\n  selectors: [[\"app-fetch-person\"]],\n  decls: 18,\n  vars: 4,\n  consts: [[4, \"ngIf\"], [1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-user-plus\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-outline-dark\", 3, \"routerLink\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-pencil\"], [1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-trash\"]],\n  template: function FetchPersonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Person List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, FetchPersonComponent_p_2_Template, 3, 0, \"p\", 0);\n      i0.ɵɵelementStart(3, \"div\")(4, \"button\", 1)(5, \"span\");\n      i0.ɵɵelement(6, \"i\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \" Add New Person \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelementStart(9, \"table\", 3)(10, \"thead\")(11, \"tr\")(12, \"th\");\n      i0.ɵɵtext(13, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Name\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"tbody\");\n      i0.ɵɵtemplate(17, FetchPersonComponent_tr_17_Template, 16, 5, \"tr\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.persons);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c1));\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.persons);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAEAA,yBAAoB;IAAIA,0BAAU;IAAAA,iBAAK;;;;;;;;;IAkB/BA,0BAAmC;IAC3BA,YAAqB;IAAAA,iBAAK;IAC9BA,0BAAI;IAAAA,YAAuB;IAAAA,iBAAK;IAChCA,qBAAS;IACTA,0BAAI;IAGUA,uBAA+C;IAAAA,iBAAO;IAC5DA,uBACJ;IAAAA,iBAAS;IACTA,yBACA;IAAAA,kCAC0C;IAAlCA;MAAA;MAAA;MAAA;MAAA,OAASA,gDAAuB;IAAA,EAAC;IACrCA,6BAAM;IAAAA,wBAA8C;IAAAA,iBAAO;IAC3DA,yBACJ;IAAAA,iBAAS;;;;IAdTA,eAAqB;IAArBA,wCAAqB;IACrBA,eAAuB;IAAvBA,0CAAuB;IAIfA,eAAiD;IAAjDA,2EAAiD;;;;;;ACjBzE,OAAM,MAAOC,oBAAoB;EAG/BC,YAAoBC,6BAA4D;IAA5D,kCAA6B,GAA7BA,6BAA6B;IAF1C,YAAO,GAAa,EAAE;EAEsD;EAEnFC,QAAQ;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAU;IACR,IAAI,CAACF,6BAA6B,CAC/BG,aAAa,EAAE,CACfC,SAAS,CAAEC,UAAU,IAAM,IAAI,CAACC,OAAO,GAAGD,UAAW,CAAC;EAC3D;EAEAE,MAAM,CAACC,EAAU;IACf,MAAMC,GAAG,GAAGC,OAAO,CACjB,4CAA4C,GAAGF,EAAE,CAClD;IACD,IAAIC,GAAG,EAAE;MACP,IAAI,CAACT,6BAA6B,CAACW,YAAY,CAACH,EAAE,CAAC,CAACJ,SAAS,CAC3D,MAAK;QACH,IAAI,CAACF,UAAU,EAAE;MACnB,CAAC,EACAU,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAChC;;EAEL;;AA3BWd,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTjCrB,0BAAI;MAAAA,2BAAW;MAAAA,iBAAK;MAEpBA,iEAA2C;MAE3CA,2BAAK;MAEKA,uBAAkD;MAAAA,iBAAO;MAACA,gCAElE;MAAAA,iBAAS;MAGXA,qBAAM;MACNA,gCAAqB;MAGLA,mBAAE;MAAAA,iBAAK;MACXA,2BAAI;MAAAA,qBAAI;MAAAA,iBAAK;MAGrBA,8BAAO;MACHA,sEAiBK;MACTA,iBAAQ;;;MApCRA,eAAc;MAAdA,mCAAc;MAGgBA,eAA8B;MAA9BA,uDAA8B;MAejCA,gBAAU;MAAVA,qCAAU","names":["i0","FetchPersonComponent","constructor","thesisManagementSystemService","ngOnInit","getPersons","getPersonList","subscribe","personData","persons","delete","id","ans","confirm","deletePerson","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/nisadiker/Projects/ThesisManagementSystem/ThesisManagementSystem/ClientApp/src/app/fetch-person/fetch-person.component.html","/Users/nisadiker/Projects/ThesisManagementSystem/ThesisManagementSystem/ClientApp/src/app/fetch-person/fetch-person.component.ts"],"sourcesContent":["<h1>Person List</h1>\n\n<p *ngIf=\"!persons\"><em>Loading...</em></p>\n\n<div>\n  <button class=\"btn btn-primary\" [routerLink]=\"['/add-person']\">\n    <span><i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i></span> Add New\n    Person\n  </button>\n</div>\n\n<br />\n<table class=\"table\">\n    <thead>\n        <tr>\n            <th>Id</th>\n            <th>Name</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let person of persons\">\n            <td>{{ person.personId }}</td>\n            <td>{{ person.personName }}</td>\n            <td></td>\n            <td>\n                <button class=\"btn btn-outline-dark\"\n                        [routerLink]=\"['/person/edit/', person.personId]\">\n                    <span><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></span>\n                    Edit\n                </button>\n                &nbsp;\n                <button class=\"btn btn-outline-danger\"\n                        (click)=\"delete(person.personId)\">\n                    <span><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span>\n                    Delete\n                </button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { Person } from '../models/person';\nimport { ThesisManagementSystemService } from '../services/thesisManagementSystem.service';\n\n@Component({\n  selector: 'app-fetch-person',\n  templateUrl: './fetch-person.component.html',\n  styleUrls: ['./fetch-person.component.scss'],\n})\nexport class FetchPersonComponent implements OnInit {\n  public persons: Person[] = [];\n\n  constructor(private thesisManagementSystemService: ThesisManagementSystemService) {}\n\n  ngOnInit(): void {\n    this.getPersons();\n  }\n  \n  getPersons(): void {\n    this.thesisManagementSystemService\n      .getPersonList()\n      .subscribe((personData) => (this.persons = personData));\n  }\n\n  delete(id: number): void {\n    const ans = confirm(\n      'Do you want to delete the person with Id: ' + id\n    );\n    if (ans) {\n      this.thesisManagementSystemService.deletePerson(id).subscribe(\n        () => {\n          this.getPersons();\n        },\n        (error) => console.error(error)\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}